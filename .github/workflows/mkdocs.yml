# Deploy MkDocs Documentation
name: Deploy Docs

# Controls when the workflow will run
on:
  # Triggers the workflow on push but only for the "main" branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Add permissions for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

# A workflow run is made up of one or more jobs
jobs:
  # Build the documentation
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Checks-out your repository
      - uses: actions/checkout@v4
      
      # Set up Python (updated to v5)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      # Install Poetry (updated)
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      # Cache dependencies
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      
      # Install dependencies
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --with dev
      
      # Setup GitHub Pages (updated to v5)
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      # Build docs with MkDocs
      - name: Build documentation
        run: |
          poetry run mkdocs build --clean --strict
      
      # Upload to GitHub Pages (updated to v4)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: site

  # Deploy to GitHub Pages
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
